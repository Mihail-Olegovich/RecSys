name: Auto Documentation Update

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master, develop]
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  auto-docs:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install llm-autodoc
      run: |
        python -m pip install --upgrade pip
        pip install git+https://github.com/ez3nx/llm_autodoc.git@feature/ci-cd
        
    - name: Generate documentation
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TOKEN_AUTODOC: ${{ secrets.TOKEN_AUTODOC }}
      run: |
        echo "üöÄ Starting automatic documentation generation..."
        
        # Check if API keys are available
        if [ -z "$OPENROUTER_API_KEY" ]; then
          echo "‚ö†Ô∏è OPENROUTER_API_KEY not found - will use fallback mode"
        else
          echo "‚úÖ OPENROUTER_API_KEY is configured"
        fi
        
        # Generate new README
        llm-autodoc generate . --output README_new.md --model gemini-flash --style summary
        
        # Check if generation was successful
        if [ $? -eq 0 ]; then
          echo "‚úÖ Documentation generation completed successfully"
        else
          echo "‚ùå Documentation generation failed"
          exit 1
        fi
        
        # Check if README was generated successfully
        if [ -f "README_new.md" ]; then
          echo "‚úÖ Documentation generated successfully"
          
          # Compare with existing README
          if [ -f "README.md" ]; then
            if ! diff -q README.md README_new.md > /dev/null; then
              echo "üìù Documentation has changes, updating README.md"
              mv README_new.md README.md
              echo "DOCS_UPDATED=true" >> $GITHUB_ENV
            else
              echo "üìã Documentation is up to date"
              rm README_new.md
              echo "DOCS_UPDATED=false" >> $GITHUB_ENV
            fi
          else
            echo "üìù Creating new README.md"
            mv README_new.md README.md
            echo "DOCS_UPDATED=true" >> $GITHUB_ENV
          fi
        else
          echo "‚ùå Failed to generate documentation"
          exit 1
        fi
    
    - name: Commit and push changes
      if: env.DOCS_UPDATED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Ensure we're on the correct branch
        BRANCH_NAME="${{ github.head_ref }}"
        echo "Current branch: $(git branch --show-current)"
        echo "Target branch: $BRANCH_NAME"
        
        git add README.md
        git commit -m "docs: auto-update README.md via LLM AutoDoc"
        
        # Push changes back to the PR branch
        if [ -n "$BRANCH_NAME" ]; then
          git push origin HEAD:$BRANCH_NAME
        else
          echo "‚ö†Ô∏è No branch name found, using default push"
          git push
        fi
    
    - name: Comment on PR
      if: env.DOCS_UPDATED == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üìö Documentation Auto-Updated
            
            The README.md has been automatically updated using LLM AutoDoc.
            
            ### Changes:
            - ‚úÖ Analyzed repository structure
            - ‚úÖ Generated comprehensive documentation
            - ‚úÖ Updated README.md with latest information
            
            *This update was generated automatically by [LLM AutoDoc](https://github.com/ez3nx/llm_autodoc)*`
          })